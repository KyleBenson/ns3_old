<mdc>
   <startup-options>
   <param> 
      <name>mdc.Sensors</name>
      <description>Number of sensor nodes</description>
      <data-type>int</data-type>
      <!-- Remember, you need to have enough room for unique IP addresses -->
      <value>100</value>
   </param> 
   <param> 
      <name>mdc.MDCs</name>
      <description>Number of Mobile Data Collectors</description>
      <data-type>int</data-type>
      <value>1</value>
   </param> 
   <param> 
      <name>mdc.Events</name>
      <description>Number of events to occur</description>
      <data-type>int</data-type>
      <value>10</value>
   </param> 
   <param> 
      <name>mdc.DataSize</name>
      <description>Size (in bytes) of full sensed event data</description>
      <data-type>int</data-type>
      <value>450</value>
   </param> 
   <param> 
      <name>mdc.EventRadius</name>
      <description>Radius of affect of the events</description>
      <data-type>float</data-type>
      <value>5</value>
   </param> 
   <param> 
      <name>mdc.MdcSpeed</name>
      <description>Speed (in m/s) of the MDCs</description>
      <data-type>float</data-type>
      <value>10.0</value>
   </param> 
   <param> 
      <name>mdc.MdcPause</name>
      <description>Pause duration of the MDCs in seconds</description>
      <data-type>float</data-type>
      <value>0.5</value>
   </param> 
   <param> 
      <name>mdc.SendFullData</name>
      <description>Whether to send the full data upon event detection or simply a notification and then send the full data to the MDCs</description>
      <data-type>boolean</data-type>
      <value>false</value>
   </param> 
   <param> 
      <name>mdc.Verbose</name>
      <description>Verbose Logging Level</description>
      <data-type>int</data-type>
      <value>1</value>
   </param> 
   <param> 
      <name>mdc.Boundary</name>
      <description>Length of (one side) of the square bounding box for the geographic region under study (in meters)</description>
      <data-type>int</data-type>
      <value>25</value>
   </param> 
   <param> 
      <name>mdc.TraceFile</name>
      <description>File to write traces to</description>
      <data-type>string</data-type>
      <value>mdcTraceFile.txt</value>
   </param> 
   <param> 
      <name>mdc.SimStartTime</name>
      <description>Simulation Start Time in seconds</description>
      <data-type>float</data-type>
      <value>1.0</value>
   </param> 
   <param> 
      <name>mdc.SimEndTime</name>
      <description>Simulation End Time in seconds</description>
      <data-type>float</data-type>
      <value>100.0</value>
   </param> 
   <param> 
      <name>mdc.TotalSimTime</name>
      <description>Total Simulation Time in seconds</description>
      <data-type>float</data-type>
      <value>150.0</value>
   </param> 
   <param> 
      <name>mdc.Pcap</name>
      <description>Whether to capture the pcap traces during the simulation</description>
      <data-type>boolean</data-type>
      <value>false</value>
   </param> 
   <param> 
      <name>mdc.Traces</name>
      <description>Whether to capture the sensor, MDC or sink traces during the simulation</description>
      <data-type>boolean</data-type>
      <value>true</value>
   </param> 
   <param> 
      <name>mdc.MDCTrajectory</name>
      <description>This is a config parameter where you can specify the mobility trajectory that can be applied to an MDC</description>
      <!-- Valid Values... 0-Random, 1-NearestNeighbor from center, 2-TSP, 3-AprioriEventLoc  ... -->
      <data-type>int</data-type>
      <value>3</value>
   </param> 
   </startup-options>

   <verbose-logging>
   <0>
   </0>
   <1>
      <module>
         <name>OnOffApplication</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>PacketSink</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>BasicEnergySource</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>MdcEventSensorApplication</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>MdcHelper</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>MdcCollectorApplication</name>
         <!-- <level>LOG_LEVEL_LOGIC</level> --> 
         <level>LOG_LEVEL_INFO</level> 
      </module>
      <module>
         <name>MdcSink</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>MdcMainSimulation</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
   </1>
   <2>
      <module>
         <name>MdcCollectorApplication</name>
         <level>LOG_LEVEL_FUNCTION</level>
      </module>
      <module>
         <name>MdcSink</name>
         <level>LOG_LEVEL_FUNCTION</level>
      </module>
      <module>
         <name>PacketSink</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>MdcEventSensorApplication</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>MdcHelper</name>
         <level>LOG_NONE</level>
      </module>
      <module>
         <name>MdcMainSimulation</name>
         <level>LOG_LEVEL_FUNCTION</level>
      </module>
   </2>
   <3>
      <module>
         <name>Socket</name>
         <level>LOG_LEVEL_FUNCTION</level>
      </module>
      <module>
         <name>MdcCollectorApplication</name>
         <level>LOG_LEVEL_LOGIC</level>
      </module>
      <module>
         <name>TcpSocket</name>
         <level>LOG_LEVEL_LOGIC</level>
      </module>
      <module>
         <name>TcpTahoe</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>TcpNewReno</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>TcpReno</name>
         <level>LOG_LEVEL_INFO</level>
      </module>
      <module>
         <name>PacketSink</name>
         <level>LOG_LEVEL_FUNCTION</level>
      </module>
      <module>
         <name>MdcMainSimulation</name>
         <level>LOG_LEVEL_LOGIC</level>
      </module>
   </3>
   </verbose-logging>
</mdc>

